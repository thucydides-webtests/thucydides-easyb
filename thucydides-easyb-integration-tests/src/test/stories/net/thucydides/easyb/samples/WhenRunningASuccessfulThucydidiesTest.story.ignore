import org.easyb.BehaviorRunner
import org.easyb.Configuration
import org.easyb.listener.ConsoleReporterListener
import org.easyb.exception.VerificationException
import static org.easyb.BehaviorRunner.getBehaviors

//ignore "Running Thucydides tests in easyb using the Thucydides plugin"
scenario "Running Thucydides tests in easyb using the Thucydides plugin", {
    given "a specification with the Thucydides plugin", {
        spec = """

      import net.thucydides.easyb.samples.pages.IndexPage
      import net.thucydides.easyb.samples.pages.DemoSiteSteps;

      using "thucydides"

      thucydides.uses_default_base_url "classpath:demosite/index.html"
      thucydides.uses_steps_from DemoSiteSteps

      scenario "test scenario", {
            given "we are on the Thucydides demo site", {
            }
            when "the user fills in the form", {
                demo_site.enter_values('Label 3', true)
            }
            then "the chosen options should be displayed", {
                demo_site.should_have_selected_value '3'
            }
      }

      scenario "failing test scenario", {
            given "we are on the Thucydides demo site", {
            }
            when "the user fills in the form", {
                demo_site.enter_values('Label 2', true)
            }
            then "the chosen options should be displayed", {
                demo_site.should_have_selected_value '2'
            }
      }

    """
    }
    when "the specification is run with easyb", {
        specFile = File.createTempFile('EasybTest', '.story')
        specFile.deleteOnExit()
        specFile.write(spec)

        consoleOutputStream = new ByteArrayOutputStream()

        originalOut = System.out
        try {
            System.setOut(new PrintStream(consoleOutputStream))
            BehaviorRunner runner = new BehaviorRunner(new Configuration())
            runner.runBehaviors(getBehaviors(specFile.absolutePath))
        } catch (VerificationException expected) {
        } finally {
            System.setOut(originalOut)
        }

        consoleOutput = consoleOutputStream.toString()
    }
    
    then "a summary of scenario results should be printed to the console", {
        consoleOutput.contains("Scenarios run: 2, Failures: 0, Pending: 0").shouldBe true
    }

    and "the summary should name the error", {
        consoleOutput.contains("the chosen options should be displayed").shouldBe true
    }
    and "the summary should report aggregate runs and 0 failure", {
        consoleOutput.contains("2 total behaviors ran with 0 failure").shouldBe true
    }
    and "the Thucydides reports should be generated in the Thucydides output directory", {
    }
}
